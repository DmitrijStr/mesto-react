{"version":3,"sources":["images/logo.svg","images/plus.svg","components/Header.js","components/PopupWithForm.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logoPath","alt","PopupWithForm","props","name","isOpen","type","onClick","onClose","title","method","noValidate","children","disabled","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","Error","status","then","result","fetch","_getResponseData","newCard","body","JSON","stringify","link","id","newData","about","avatar","data","likes","length","authorization","Card","style","backgroundImage","onCardClick","card","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","getCards","useEffect","getUserInfo","getInitialCards","console","log","items","map","el","_id","onEditAvatar","onEditProfile","onAddPlace","plusButtonPath","key","isEditProfilePopupOpen","closeAllPopups","required","minLength","maxLength","autoComplete","isAddPlacePopupOpen","placeholder","isEditAvatarPopupOpen","Footer","ImagePopup","App","setEditProfilePopupOpen","setAddPlacePopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","isCardPopupOpen","setCardPopupOpen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1c2b74c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.b2fce4ac.svg\";","import React from 'react';\nimport logoPath from '../images/logo.svg';\n\nfunction Header() {\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<a href='#'><img className=\"header__logo\" src={logoPath} alt='изображение логотипа' /></a>\n\t\t</header>\n\t);\n}\n\nexport default Header;","import React from 'react';\n\nfunction PopupWithForm(props) {\n\treturn (\n\t\t<section className={`pop-up popup_type_${props.name} ${props.isOpen && 'pop-up_type_opened'}`} >\n\t\t\t<div className=\"pop-up__container\">\n\t\t\t\t<button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\" onClick={props.onClose}>\n\t\t\t\t</button>\n\t\t\t\t<p className=\"pop-up__title\">{props.title}</p>\n\t\t\t\t<form className=\"pop-up__input pop-up__form\" method=\"GET\" noValidate>\n\t\t\t\t\t{props.children}\n\t\t\t\t\t<button className=\"pop-up__btn pop-up__btn_action_save pop-up__btn_type_inactive\" type=\"submit\" disabled>\n\t\t\t\t\t\tСохранить\n\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default PopupWithForm;","class Api {\n\tconstructor(options) {\n\t\tthis._baseUrl = options.baseUrl;\n\t\tthis._headers = options.headers;\n\t}\n\n\t_getResponseData() {\n\t\treturn res => {\n\t\t\tif (res.ok) {\n\t\t\t\treturn res.json();\n\t\t\t}\n\t\t\treturn Promise.reject(new Error(`Ошибка: ${res.status}`))\n\t\t\t\t.then((result) => {\n\t\t\t\t\treturn result\n\t\t\t\t})\n\t\t}\n\t}\n\n\tgetInitialCards() {\n\t\treturn fetch(`${this._baseUrl}/cards`, {\n\t\t\theaders: this._headers\n\t\t}).then(this._getResponseData())\n\t}\n\n\tgetUserInfo() {\n\t\treturn fetch(`${this._baseUrl}/users/me`, {\n\t\t\theaders: this._headers\n\t\t}).then(this._getResponseData())\n\t}\n\n\tpostCard(newCard) {\n\t\treturn fetch(`${this._baseUrl}/cards`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: newCard.name,\n\t\t\t\tlink: newCard.link\n\t\t\t})\n\t\t}).then(this._getResponseData())\n\t}\n\n\tdeleteCard(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: this._headers\n\t\t}).then(this._getResponseData())\n\t}\n\n\tpatchUserInfo(newData) {\n\t\treturn fetch(`${this._baseUrl}/users/me/`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: newData.name,\n\t\t\t\tabout: newData.about\n\t\t\t})\n\t\t}).then(this._getResponseData())\n\t}\n\n\tpatchAvatar(newData) {\n\t\treturn fetch(`${this._baseUrl}/users/me/avatar`, {\n\t\t\tmethod: 'PATCH',\n\t\t\theaders: this._headers,\n\t\t\tbody: JSON.stringify({\n\t\t\t\tavatar: newData.avatar\n\t\t\t})\n\t\t}).then(this._getResponseData())\n\t}\n\n\tputLike(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: this._headers\n\t\t})\n\t\t\t.then(this._getResponseData())\n\t\t\t.then((data) => {\n\t\t\t\treturn (data.likes.length)\n\t\t\t})\n\t}\n\n\tremoveLike(id) {\n\t\treturn fetch(`${this._baseUrl}/cards/likes/${id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: this._headers\n\t\t})\n\t\t\t.then(this._getResponseData())\n\t\t\t.then((data) => {\n\t\t\t\treturn (data.likes.length)\n\t\t\t})\n\t}\n}\n\nconst api = new Api({\n\tbaseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n\theaders: {\n\t\tauthorization: 'bfb56561-5ac4-4046-893e-dcc4ab3eace0',\n\t\t'Content-Type': 'application/json'\n\t}\n});\n\nexport default api\n","import React from 'react'\n\nfunction Card(props) {\n\n\tfunction handleClick() {\n\t\tprops.onCardClick(props.card);\n\t}  \n\n\treturn (\n\t\t<div className=\"photo-grid__item\">\n\t\t\t<button className=\"photo-grid__trash-button hover-button\" type=\"button\">\n\t\t\t</button>\n\n\t\t\t<div style={{ backgroundImage: `url(${props.src})`}} className=\"photo-grid__image photo-grid__image-button hover-button\" type='button' onClick={handleClick}></div>\n\n\t\t\t\t<div className=\"photo-grid__description\">\n\t\t\t\t\t<h2 className=\"photo-grid__place\">{props.title}</h2>\n\t\t\t\t\t<div className=\"photo-grid__like-wrapper\">\n\t\t\t\t\t\t<button className=\"photo-grid__like-button hover-button\" type=\"button\"></button>\n\t\t\t\t\t\t<p className=\"photo-grid__likes-count\">{props.likes}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t)\n}\n\nexport default Card;","import React from 'react';\nimport plusButtonPath from '../images/plus.svg';\nimport PopupWithForm from './PopupWithForm'\nimport api from '../utils/Api'\nimport Card from './Card'\n\nfunction Main(props) {\n\n  const [userName, setUserName] = React.useState('#')\n  const [userDescription, setUserDescription] = React.useState('#')\n  const [userAvatar, setUserAvatar] = React.useState()\n  const [cards, getCards] = React.useState([])\n\n  React.useEffect(() => {\n    api.getUserInfo().then((data) => {\n      setUserName(data.name)\n      setUserDescription(data.about)\n      setUserAvatar(data.avatar)\n    })\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards().then((data) => {\n      console.log(data)\n      const items = data.map((el) => ({\n        id: el._id,\n        title: el.name,\n        src: el.link,\n        likes: el.likes.length\n      }))\n      console.log(items)\n\n      getCards(items);\n    });\n  }, [])\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__infos\">\n          <figure className=\"profile__avatar-wrapper\" onClick={props.onEditAvatar}>\n            <div style={{ backgroundImage: `url(${userAvatar})` }} className=\"profile__avatar\" src=\"#\" alt=\"изображение аватара\">\n            </div>\n          </figure>\n          <div className=\"profile__description\">\n            <div className='profile__info'>\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button className=\"profile__button profile__button_action_edit hover-button\" type=\"button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__profession\">{userDescription}</p>\n          </div>\n        </div>\n        <button className=\"profile__button profile__button_action_add hover-button\" type=\"button\" onClick={props.onAddPlace}>\n          <img src={plusButtonPath} alt='изображение кнопки добавить' />\n        </button>\n      </section>\n      <section className=\"photo-grid\">\n        {cards.map(({ id, ...card }) => (\n          <Card key={id} {...card} onCardClick={props.onCardClick} card={card}/>\n        ))}\n      </section>\n      <PopupWithForm title='Редактировать профиль' name='edit' isOpen={props.isEditProfilePopupOpen} onClose={props.closeAllPopups}>\n        <input id='name-input' type=\"text\" className=\"pop-up__input pop-up__text\" name=\"name\" required\n          minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" />\n        <span id=\"name-input-error\" className=\"\"></span>\n        <input id='profession-input' type=\"text\" className=\"pop-up__input pop-up__text \" name=\"about\"\n          required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" />\n        <span id=\"profession-input-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Новое место' name='new-card' isOpen={props.isAddPlacePopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"text\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"Название\"\n          name=\"name\" required minLength=\"1\" maxLength=\"30\" />\n        <span id=\"place-error\" className=\"\"></span>\n        <input id='url' type=\"url\" className=\"pop-up__text pop-up__text_type_link\" placeholder=\"Ссылка на картинку\"\n          name='link' required />\n        <span id=\"url-error\" className=\"\"></span>\n      </PopupWithForm>\n      <PopupWithForm title='Вы уверены?' name='delete-card'>\n      </PopupWithForm>\n\n      <PopupWithForm title='Обновить аватар' name='edit-avatar' isOpen={props.isEditAvatarPopupOpen} onClose={props.closeAllPopups}>\n        <input id='place' type=\"url\" className=\"pop-up__text pop-up__text_type_place\" placeholder=\"ссылка\"\n          name=\"avatar\" required />\n        <span id=\"place-error\" className=\"\"></span>\n      </PopupWithForm>\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<h3 className=\"footer__copyright\">© 2020 Mesto Russia</h3>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;","import React from 'react';\n\nfunction ImagePopup({ card, isOpen, onClose}) {\n\tconsole.log(card)\n\treturn (\n\t\t<section className={`pop-up popup_type_image ${isOpen && 'pop-up_type_opened'}`}>\n\t\t\t<div className=\"pop-up__content\">\n\t\t\t\t<div className=\"pop-up__image-contnaiter\">\n\t\t\t\t\t<button className=\"pop-up__btn pop-up__btn_action_deny hover-button\" type=\"button\" onClick={onClose}>\n\t\t\t\t\t</button>\n\t\t\t\t\t<img className=\"pop-up__image\" src={card.src} alt='изображение' />\n\t\t\t\t\t<p className='pop-up__image-name'>{card.title}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t)\n}\n\nexport default ImagePopup;\n\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup'\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState('#');\n  const [isCardPopupOpen, setCardPopupOpen] = React.useState(false)\n\n  function handleCardClick(card) {\n    setCardPopupOpen(true)\n    setSelectedCard(card)\n    console.log(selectedCard);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditProfilePopupOpen(false)\n    setCardPopupOpen(false)\n  }\n\n  return (\n    <div className='page'>\n      <div className=\"page__content\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          closeAllPopups={closeAllPopups}\n          onCardClick={handleCardClick}\n          isEditProfilePopupOpen={isEditProfilePopupOpen}\n          isAddPlacePopupOpen={isAddPlacePopupOpen}\n          isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n        />\n        <ImagePopup card={selectedCard} isOpen={isCardPopupOpen} onClose={closeAllPopups} />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}